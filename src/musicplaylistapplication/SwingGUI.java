/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package musicplaylistapplication;

import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author yonas
 */
public class SwingGUI extends javax.swing.JFrame {
   private MusicManager musicManager;
   private Song lastAddedSong;// tracking the last song
   
    public SwingGUI() {
       musicManager = new MusicManager ();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Title = new javax.swing.JTextField();
        Artist = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TexSearch = new javax.swing.JTextField();
        ADD = new javax.swing.JButton();
        move = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Size = new javax.swing.JButton();
        Print = new javax.swing.JButton();
        Search = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        Title.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TitleActionPerformed(evt);
            }
        });
        jPanel1.add(Title);
        Title.setBounds(270, 310, 149, 33);

        Artist.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Artist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArtistActionPerformed(evt);
            }
        });
        jPanel1.add(Artist);
        Artist.setBounds(270, 360, 149, 33);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Title");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(210, 310, 60, 25);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Artist");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(205, 360, 50, 25);

        TexSearch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel1.add(TexSearch);
        TexSearch.setBounds(440, 50, 127, 33);

        ADD.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ADD.setText("Add");
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });
        jPanel1.add(ADD);
        ADD.setBounds(120, 510, 90, 33);

        move.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        move.setText("Move to Genre");
        move.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveActionPerformed(evt);
            }
        });
        jPanel1.add(move);
        move.setBounds(230, 510, 170, 33);

        Delete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        jPanel1.add(Delete);
        Delete.setBounds(10, 510, 100, 33);

        Size.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Size.setText("Size");
        Size.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SizeActionPerformed(evt);
            }
        });
        jPanel1.add(Size);
        Size.setBounds(420, 510, 80, 33);

        Print.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Print.setText("Print");
        Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintActionPerformed(evt);
            }
        });
        jPanel1.add(Print);
        Print.setBounds(510, 510, 90, 33);

        Search.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        jPanel1.add(Search);
        Search.setBounds(330, 50, 100, 33);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicplaylistapplication/black-cat-8242130_640.png"))); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(0, 0, 640, 640);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TitleActionPerformed

    private void ArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArtistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ArtistActionPerformed

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
                String title = Title.getText();
                String artist = Artist.getText();
                musicManager.getLikedPlaylist().addSong(new Song(title, artist));
                lastAddedSong = new Song(title, artist); // Update the last added song reference
                JOptionPane.showMessageDialog(null, "Song added successfully!");
            
    }//GEN-LAST:event_ADDActionPerformed

    private void moveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveActionPerformed
                String title = Title.getText();
                String artist = Artist.getText(); // Retrieve the artist from the input field
                if (!musicManager.getLikedPlaylist().containsSong(title)) {
                    JOptionPane.showMessageDialog(null, "Song does not exist in the Liked Playlist.");
                    return;
                }
                String[] genres = {"Rock", "Pop"}; // Add more genres if needed
                JComboBox<String> genreComboBox = new JComboBox<>(genres);
                int result = JOptionPane.showConfirmDialog(null, genreComboBox, "Select Genre", JOptionPane.OK_CANCEL_OPTION);
                if (result == JOptionPane.OK_OPTION) {
                    String selectedGenre = (String) genreComboBox.getSelectedItem();
                    musicManager.moveLastAddedSongToGenrePlaylist(selectedGenre);
                }
            
    }//GEN-LAST:event_moveActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
          String title = Title.getText();
          musicManager.getLikedPlaylist().deleteSong(title);
    }//GEN-LAST:event_DeleteActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
       String title = TexSearch.getText().trim(); // Get the text and remove leading/trailing spaces
    
    if (title.isEmpty()) { // Check if the title is empty
        JOptionPane.showMessageDialog(null, "Field cannot be empty. Please enter a title to search.");
    } else {
        Song song = musicManager.searchSong(title);
        if (song != null) {
            JOptionPane.showMessageDialog(null, "Song Found:\nTitle: " + song.getTitle() + "\nArtist: " + song.getArtist());
        } else {
            JOptionPane.showMessageDialog(null, "Song not found.");
        }
    }
    }//GEN-LAST:event_SearchActionPerformed

    private void PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintActionPerformed
       String[] options = {"Liked Playlist", "Genre Playlists"};
    String choice = (String) JOptionPane.showInputDialog(null, "Select playlist to print:",
        "Print Playlist", JOptionPane.PLAIN_MESSAGE, null, options, options[0]);

    if (choice != null) {
        if (choice.equals("Liked Playlist")) {
            LikedPlaylist likedPlaylist = musicManager.getLikedPlaylist();
            if (likedPlaylist.getHead() == null) {
                JOptionPane.showMessageDialog(null, "Liked Playlist is empty. No songs to display.");
            } else {
                likedPlaylist.printPlaylist();
            }
        } else if (choice.equals("Genre Playlists")) {
            boolean allEmpty = true;
            StringBuilder message = new StringBuilder("Genre Playlists:\n");
            for (Genre genrePlaylist : musicManager.getGenrePlaylists()) {
                if (genrePlaylist.getHead() != null) {
                    allEmpty = false;
                    message.append("Genre: ").append(genrePlaylist.getGenre()).append("\n");
                    genrePlaylist.printPlaylist();
                }
            }
            if (allEmpty) {
                JOptionPane.showMessageDialog(null, "Genre Playlists are all empty. No songs to display.");
            }
        }
    }  
    }//GEN-LAST:event_PrintActionPerformed

    private void SizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SizeActionPerformed
       // Get the size of the liked playlist
    int likedPlaylistSize = musicManager.getLikedPlaylist().countSongs();
    
    // Get the size of each genre playlist
    StringBuilder genreSizes = new StringBuilder();
    for (Genre genrePlaylist : musicManager.getGenrePlaylists()) {
        int genreSize = genrePlaylist.countSongs();
        genreSizes.append("Number of songs in ").append(genrePlaylist.getGenre()).append(" playlist: ").append(genreSize).append("\n");
    }
    
    // Display the sizes of the liked playlist and genre playlists
    JOptionPane.showMessageDialog(null, "Number of liked songs: " + likedPlaylistSize + "\n" + genreSizes.toString());

    }//GEN-LAST:event_SizeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SwingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SwingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SwingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SwingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SwingGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADD;
    private javax.swing.JTextField Artist;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Print;
    private javax.swing.JButton Search;
    private javax.swing.JButton Size;
    private javax.swing.JTextField TexSearch;
    private javax.swing.JTextField Title;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton move;
    // End of variables declaration//GEN-END:variables
}
